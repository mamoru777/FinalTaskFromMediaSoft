// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.20.0--rc1
// source: restaurant_menu.proto

package restaurant

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateMenuRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OnDate          *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=on_date,json=onDate,proto3" json:"on_date,omitempty"`
	OpeningRecordAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=opening_record_at,json=openingRecordAt,proto3" json:"opening_record_at,omitempty"`
	ClosingRecordAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=closing_record_at,json=closingRecordAt,proto3" json:"closing_record_at,omitempty"`
	Salads          []string               `protobuf:"bytes,4,rep,name=salads,proto3" json:"salads,omitempty"`
	Garnishes       []string               `protobuf:"bytes,5,rep,name=garnishes,proto3" json:"garnishes,omitempty"`
	Meats           []string               `protobuf:"bytes,6,rep,name=meats,proto3" json:"meats,omitempty"`
	Soups           []string               `protobuf:"bytes,7,rep,name=soups,proto3" json:"soups,omitempty"`
	Drinks          []string               `protobuf:"bytes,8,rep,name=drinks,proto3" json:"drinks,omitempty"`
	Desserts        []string               `protobuf:"bytes,9,rep,name=desserts,proto3" json:"desserts,omitempty"`
}

func (x *CreateMenuRequest) Reset() {
	*x = CreateMenuRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_restaurant_menu_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMenuRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMenuRequest) ProtoMessage() {}

func (x *CreateMenuRequest) ProtoReflect() protoreflect.Message {
	mi := &file_restaurant_menu_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMenuRequest.ProtoReflect.Descriptor instead.
func (*CreateMenuRequest) Descriptor() ([]byte, []int) {
	return file_restaurant_menu_proto_rawDescGZIP(), []int{0}
}

func (x *CreateMenuRequest) GetOnDate() *timestamppb.Timestamp {
	if x != nil {
		return x.OnDate
	}
	return nil
}

func (x *CreateMenuRequest) GetOpeningRecordAt() *timestamppb.Timestamp {
	if x != nil {
		return x.OpeningRecordAt
	}
	return nil
}

func (x *CreateMenuRequest) GetClosingRecordAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ClosingRecordAt
	}
	return nil
}

func (x *CreateMenuRequest) GetSalads() []string {
	if x != nil {
		return x.Salads
	}
	return nil
}

func (x *CreateMenuRequest) GetGarnishes() []string {
	if x != nil {
		return x.Garnishes
	}
	return nil
}

func (x *CreateMenuRequest) GetMeats() []string {
	if x != nil {
		return x.Meats
	}
	return nil
}

func (x *CreateMenuRequest) GetSoups() []string {
	if x != nil {
		return x.Soups
	}
	return nil
}

func (x *CreateMenuRequest) GetDrinks() []string {
	if x != nil {
		return x.Drinks
	}
	return nil
}

func (x *CreateMenuRequest) GetDesserts() []string {
	if x != nil {
		return x.Desserts
	}
	return nil
}

type CreateMenuResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateMenuResponse) Reset() {
	*x = CreateMenuResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_restaurant_menu_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMenuResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMenuResponse) ProtoMessage() {}

func (x *CreateMenuResponse) ProtoReflect() protoreflect.Message {
	mi := &file_restaurant_menu_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMenuResponse.ProtoReflect.Descriptor instead.
func (*CreateMenuResponse) Descriptor() ([]byte, []int) {
	return file_restaurant_menu_proto_rawDescGZIP(), []int{1}
}

type GetMenuRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OnDate *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=on_date,json=onDate,proto3" json:"on_date,omitempty"`
}

func (x *GetMenuRequest) Reset() {
	*x = GetMenuRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_restaurant_menu_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMenuRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMenuRequest) ProtoMessage() {}

func (x *GetMenuRequest) ProtoReflect() protoreflect.Message {
	mi := &file_restaurant_menu_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMenuRequest.ProtoReflect.Descriptor instead.
func (*GetMenuRequest) Descriptor() ([]byte, []int) {
	return file_restaurant_menu_proto_rawDescGZIP(), []int{2}
}

func (x *GetMenuRequest) GetOnDate() *timestamppb.Timestamp {
	if x != nil {
		return x.OnDate
	}
	return nil
}

type GetMenuResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Menu *Menu `protobuf:"bytes,1,opt,name=menu,proto3" json:"menu,omitempty"`
}

func (x *GetMenuResponse) Reset() {
	*x = GetMenuResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_restaurant_menu_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMenuResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMenuResponse) ProtoMessage() {}

func (x *GetMenuResponse) ProtoReflect() protoreflect.Message {
	mi := &file_restaurant_menu_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMenuResponse.ProtoReflect.Descriptor instead.
func (*GetMenuResponse) Descriptor() ([]byte, []int) {
	return file_restaurant_menu_proto_rawDescGZIP(), []int{3}
}

func (x *GetMenuResponse) GetMenu() *Menu {
	if x != nil {
		return x.Menu
	}
	return nil
}

type Menu struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid            string                 `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	OnDate          *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=on_date,json=onDate,proto3" json:"on_date,omitempty"`
	OpeningRecordAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=opening_record_at,json=openingRecordAt,proto3" json:"opening_record_at,omitempty"`
	ClosingRecordAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=closing_record_at,json=closingRecordAt,proto3" json:"closing_record_at,omitempty"`
	Salads          []*Product             `protobuf:"bytes,5,rep,name=salads,proto3" json:"salads,omitempty"`
	Garnishes       []*Product             `protobuf:"bytes,6,rep,name=garnishes,proto3" json:"garnishes,omitempty"`
	Meats           []*Product             `protobuf:"bytes,7,rep,name=meats,proto3" json:"meats,omitempty"`
	Soups           []*Product             `protobuf:"bytes,8,rep,name=soups,proto3" json:"soups,omitempty"`
	Drinks          []*Product             `protobuf:"bytes,9,rep,name=drinks,proto3" json:"drinks,omitempty"`
	Desserts        []*Product             `protobuf:"bytes,10,rep,name=desserts,proto3" json:"desserts,omitempty"`
	CreatedAt       *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *Menu) Reset() {
	*x = Menu{}
	if protoimpl.UnsafeEnabled {
		mi := &file_restaurant_menu_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Menu) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Menu) ProtoMessage() {}

func (x *Menu) ProtoReflect() protoreflect.Message {
	mi := &file_restaurant_menu_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Menu.ProtoReflect.Descriptor instead.
func (*Menu) Descriptor() ([]byte, []int) {
	return file_restaurant_menu_proto_rawDescGZIP(), []int{4}
}

func (x *Menu) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *Menu) GetOnDate() *timestamppb.Timestamp {
	if x != nil {
		return x.OnDate
	}
	return nil
}

func (x *Menu) GetOpeningRecordAt() *timestamppb.Timestamp {
	if x != nil {
		return x.OpeningRecordAt
	}
	return nil
}

func (x *Menu) GetClosingRecordAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ClosingRecordAt
	}
	return nil
}

func (x *Menu) GetSalads() []*Product {
	if x != nil {
		return x.Salads
	}
	return nil
}

func (x *Menu) GetGarnishes() []*Product {
	if x != nil {
		return x.Garnishes
	}
	return nil
}

func (x *Menu) GetMeats() []*Product {
	if x != nil {
		return x.Meats
	}
	return nil
}

func (x *Menu) GetSoups() []*Product {
	if x != nil {
		return x.Soups
	}
	return nil
}

func (x *Menu) GetDrinks() []*Product {
	if x != nil {
		return x.Drinks
	}
	return nil
}

func (x *Menu) GetDesserts() []*Product {
	if x != nil {
		return x.Desserts
	}
	return nil
}

func (x *Menu) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

var File_restaurant_menu_proto protoreflect.FileDescriptor

var file_restaurant_menu_proto_rawDesc = []byte{
	0x0a, 0x15, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x6e,
	0x75, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x34, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x73, 0x6f,
	0x66, 0x74, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x66, 0x69,
	0x6e, 0x61, 0x6c, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x73, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x1a, 0x1c, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65,
	0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x72,
	0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xfd, 0x02, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a,
	0x07, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52,
	0x06, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x4b, 0x0a, 0x11, 0x6f, 0x70, 0x65, 0x6e, 0x69,
	0x6e, 0x67, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x03,
	0xe0, 0x41, 0x02, 0x52, 0x0f, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x41, 0x74, 0x12, 0x4b, 0x0a, 0x11, 0x63, 0x6c, 0x6f, 0x73, 0x69, 0x6e, 0x67, 0x5f,
	0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x03, 0xe0, 0x41, 0x02,
	0x52, 0x0f, 0x63, 0x6c, 0x6f, 0x73, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x41,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x61, 0x6c, 0x61, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x61, 0x6c, 0x61, 0x64, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x61, 0x72,
	0x6e, 0x69, 0x73, 0x68, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x67, 0x61,
	0x72, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x65, 0x61, 0x74, 0x73,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x65, 0x61, 0x74, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x73, 0x6f,
	0x75, 0x70, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x72, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0x08, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x06, 0x64, 0x72, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x64,
	0x65, 0x73, 0x73, 0x65, 0x72, 0x74, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x64,
	0x65, 0x73, 0x73, 0x65, 0x72, 0x74, 0x73, 0x22, 0x14, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x45, 0x0a,
	0x0e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x33, 0x0a, 0x07, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x06, 0x6f, 0x6e,
	0x44, 0x61, 0x74, 0x65, 0x22, 0x66, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x04, 0x6d, 0x65, 0x6e, 0x75, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x73, 0x6f, 0x66,
	0x74, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x66, 0x69, 0x6e,
	0x61, 0x6c, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x73, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x6e,
	0x75, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x04, 0x6d, 0x65, 0x6e, 0x75, 0x22, 0xaa, 0x06, 0x0a,
	0x04, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x33, 0x0a, 0x07, 0x6f, 0x6e, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x06, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x46,
	0x0a, 0x11, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0f, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x41, 0x74, 0x12, 0x46, 0x0a, 0x11, 0x63, 0x6c, 0x6f, 0x73, 0x69, 0x6e,
	0x67, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0f, 0x63,
	0x6c, 0x6f, 0x73, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x41, 0x74, 0x12, 0x55,
	0x0a, 0x06, 0x73, 0x61, 0x6c, 0x61, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3d,
	0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x73, 0x6f, 0x66, 0x74, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x2e, 0x74, 0x61, 0x73, 0x6b,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61,
	0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x06, 0x73,
	0x61, 0x6c, 0x61, 0x64, 0x73, 0x12, 0x5b, 0x0a, 0x09, 0x67, 0x61, 0x72, 0x6e, 0x69, 0x73, 0x68,
	0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61,
	0x73, 0x6f, 0x66, 0x74, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x2e,
	0x66, 0x69, 0x6e, 0x61, 0x6c, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x73, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x09, 0x67, 0x61, 0x72, 0x6e, 0x69, 0x73, 0x68,
	0x65, 0x73, 0x12, 0x53, 0x0a, 0x05, 0x6d, 0x65, 0x61, 0x74, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x3d, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x73, 0x6f, 0x66, 0x74, 0x2e, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x2e, 0x74,
	0x61, 0x73, 0x6b, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x72, 0x65,
	0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x52, 0x05, 0x6d, 0x65, 0x61, 0x74, 0x73, 0x12, 0x53, 0x0a, 0x05, 0x73, 0x6f, 0x75, 0x70, 0x73,
	0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x73, 0x6f,
	0x66, 0x74, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x66, 0x69,
	0x6e, 0x61, 0x6c, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x73, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x05, 0x73, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x55, 0x0a, 0x06,
	0x64, 0x72, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x6d,
	0x65, 0x64, 0x69, 0x61, 0x73, 0x6f, 0x66, 0x74, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x73,
	0x68, 0x69, 0x70, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72,
	0x61, 0x6e, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x06, 0x64, 0x72, 0x69,
	0x6e, 0x6b, 0x73, 0x12, 0x59, 0x0a, 0x08, 0x64, 0x65, 0x73, 0x73, 0x65, 0x72, 0x74, 0x73, 0x18,
	0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x73, 0x6f, 0x66,
	0x74, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x66, 0x69, 0x6e,
	0x61, 0x6c, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x73, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x52, 0x08, 0x64, 0x65, 0x73, 0x73, 0x65, 0x72, 0x74, 0x73, 0x12, 0x39,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x32, 0xff, 0x02, 0x0a, 0x0b, 0x4d, 0x65,
	0x6e, 0x75, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0xbc, 0x01, 0x0a, 0x0a, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x47, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61,
	0x73, 0x6f, 0x66, 0x74, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x2e,
	0x66, 0x69, 0x6e, 0x61, 0x6c, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x73, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x48, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x73, 0x6f, 0x66, 0x74, 0x2e, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x2e, 0x74,
	0x61, 0x73, 0x6b, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x72, 0x65,
	0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d,
	0x65, 0x6e, 0x75, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x15, 0x22, 0x10, 0x2f, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74,
	0x2f, 0x6d, 0x65, 0x6e, 0x75, 0x3a, 0x01, 0x2a, 0x12, 0xb0, 0x01, 0x0a, 0x07, 0x47, 0x65, 0x74,
	0x4d, 0x65, 0x6e, 0x75, 0x12, 0x44, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x73, 0x6f, 0x66, 0x74,
	0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x66, 0x69, 0x6e, 0x61,
	0x6c, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73,
	0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x4d,
	0x65, 0x6e, 0x75, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x45, 0x2e, 0x6d, 0x65, 0x64,
	0x69, 0x61, 0x73, 0x6f, 0x66, 0x74, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x73, 0x68, 0x69,
	0x70, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e,
	0x74, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x12, 0x10, 0x2f, 0x72, 0x65, 0x73, 0x74,
	0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x2f, 0x6d, 0x65, 0x6e, 0x75, 0x42, 0x4f, 0x5a, 0x4d, 0x67,
	0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x73,
	0x6f, 0x66, 0x74, 0x2d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x2f, 0x66,
	0x69, 0x6e, 0x61, 0x6c, 0x2d, 0x74, 0x61, 0x73, 0x6b, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x73, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x73, 0x2f, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_restaurant_menu_proto_rawDescOnce sync.Once
	file_restaurant_menu_proto_rawDescData = file_restaurant_menu_proto_rawDesc
)

func file_restaurant_menu_proto_rawDescGZIP() []byte {
	file_restaurant_menu_proto_rawDescOnce.Do(func() {
		file_restaurant_menu_proto_rawDescData = protoimpl.X.CompressGZIP(file_restaurant_menu_proto_rawDescData)
	})
	return file_restaurant_menu_proto_rawDescData
}

var file_restaurant_menu_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_restaurant_menu_proto_goTypes = []interface{}{
	(*CreateMenuRequest)(nil),     // 0: mediasoft.internship.final.task.contracts.restaurant.CreateMenuRequest
	(*CreateMenuResponse)(nil),    // 1: mediasoft.internship.final.task.contracts.restaurant.CreateMenuResponse
	(*GetMenuRequest)(nil),        // 2: mediasoft.internship.final.task.contracts.restaurant.GetMenuRequest
	(*GetMenuResponse)(nil),       // 3: mediasoft.internship.final.task.contracts.restaurant.GetMenuResponse
	(*Menu)(nil),                  // 4: mediasoft.internship.final.task.contracts.restaurant.Menu
	(*timestamppb.Timestamp)(nil), // 5: google.protobuf.Timestamp
	(*Product)(nil),               // 6: mediasoft.internship.final.task.contracts.restaurant.Product
}
var file_restaurant_menu_proto_depIdxs = []int32{
	5,  // 0: mediasoft.internship.final.task.contracts.restaurant.CreateMenuRequest.on_date:type_name -> google.protobuf.Timestamp
	5,  // 1: mediasoft.internship.final.task.contracts.restaurant.CreateMenuRequest.opening_record_at:type_name -> google.protobuf.Timestamp
	5,  // 2: mediasoft.internship.final.task.contracts.restaurant.CreateMenuRequest.closing_record_at:type_name -> google.protobuf.Timestamp
	5,  // 3: mediasoft.internship.final.task.contracts.restaurant.GetMenuRequest.on_date:type_name -> google.protobuf.Timestamp
	4,  // 4: mediasoft.internship.final.task.contracts.restaurant.GetMenuResponse.menu:type_name -> mediasoft.internship.final.task.contracts.restaurant.Menu
	5,  // 5: mediasoft.internship.final.task.contracts.restaurant.Menu.on_date:type_name -> google.protobuf.Timestamp
	5,  // 6: mediasoft.internship.final.task.contracts.restaurant.Menu.opening_record_at:type_name -> google.protobuf.Timestamp
	5,  // 7: mediasoft.internship.final.task.contracts.restaurant.Menu.closing_record_at:type_name -> google.protobuf.Timestamp
	6,  // 8: mediasoft.internship.final.task.contracts.restaurant.Menu.salads:type_name -> mediasoft.internship.final.task.contracts.restaurant.Product
	6,  // 9: mediasoft.internship.final.task.contracts.restaurant.Menu.garnishes:type_name -> mediasoft.internship.final.task.contracts.restaurant.Product
	6,  // 10: mediasoft.internship.final.task.contracts.restaurant.Menu.meats:type_name -> mediasoft.internship.final.task.contracts.restaurant.Product
	6,  // 11: mediasoft.internship.final.task.contracts.restaurant.Menu.soups:type_name -> mediasoft.internship.final.task.contracts.restaurant.Product
	6,  // 12: mediasoft.internship.final.task.contracts.restaurant.Menu.drinks:type_name -> mediasoft.internship.final.task.contracts.restaurant.Product
	6,  // 13: mediasoft.internship.final.task.contracts.restaurant.Menu.desserts:type_name -> mediasoft.internship.final.task.contracts.restaurant.Product
	5,  // 14: mediasoft.internship.final.task.contracts.restaurant.Menu.created_at:type_name -> google.protobuf.Timestamp
	0,  // 15: mediasoft.internship.final.task.contracts.restaurant.MenuService.CreateMenu:input_type -> mediasoft.internship.final.task.contracts.restaurant.CreateMenuRequest
	2,  // 16: mediasoft.internship.final.task.contracts.restaurant.MenuService.GetMenu:input_type -> mediasoft.internship.final.task.contracts.restaurant.GetMenuRequest
	1,  // 17: mediasoft.internship.final.task.contracts.restaurant.MenuService.CreateMenu:output_type -> mediasoft.internship.final.task.contracts.restaurant.CreateMenuResponse
	3,  // 18: mediasoft.internship.final.task.contracts.restaurant.MenuService.GetMenu:output_type -> mediasoft.internship.final.task.contracts.restaurant.GetMenuResponse
	17, // [17:19] is the sub-list for method output_type
	15, // [15:17] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_restaurant_menu_proto_init() }
func file_restaurant_menu_proto_init() {
	if File_restaurant_menu_proto != nil {
		return
	}
	file_restaurant_product_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_restaurant_menu_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMenuRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_restaurant_menu_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMenuResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_restaurant_menu_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMenuRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_restaurant_menu_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMenuResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_restaurant_menu_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Menu); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_restaurant_menu_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_restaurant_menu_proto_goTypes,
		DependencyIndexes: file_restaurant_menu_proto_depIdxs,
		MessageInfos:      file_restaurant_menu_proto_msgTypes,
	}.Build()
	File_restaurant_menu_proto = out.File
	file_restaurant_menu_proto_rawDesc = nil
	file_restaurant_menu_proto_goTypes = nil
	file_restaurant_menu_proto_depIdxs = nil
}
