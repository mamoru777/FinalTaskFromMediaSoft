// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.20.0--rc1
// source: statistics_statistics.proto

package statistics

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StatisticsProductType int32

const (
	StatisticsProductType_ST_PRODUCT_TYPE_UNSPECIFIED StatisticsProductType = 0
	StatisticsProductType_ST_PRODUCT_TYPE_SALAD       StatisticsProductType = 1
	StatisticsProductType_ST_PRODUCT_TYPE_GARNISH     StatisticsProductType = 2
	StatisticsProductType_ST_PRODUCT_TYPE_MEAT        StatisticsProductType = 3
	StatisticsProductType_ST_PRODUCT_TYPE_SOUP        StatisticsProductType = 4
	StatisticsProductType_ST_PRODUCT_TYPE_DRINK       StatisticsProductType = 5
	StatisticsProductType_ST_PRODUCT_TYPE_DESSERT     StatisticsProductType = 6
)

// Enum value maps for StatisticsProductType.
var (
	StatisticsProductType_name = map[int32]string{
		0: "ST_PRODUCT_TYPE_UNSPECIFIED",
		1: "ST_PRODUCT_TYPE_SALAD",
		2: "ST_PRODUCT_TYPE_GARNISH",
		3: "ST_PRODUCT_TYPE_MEAT",
		4: "ST_PRODUCT_TYPE_SOUP",
		5: "ST_PRODUCT_TYPE_DRINK",
		6: "ST_PRODUCT_TYPE_DESSERT",
	}
	StatisticsProductType_value = map[string]int32{
		"ST_PRODUCT_TYPE_UNSPECIFIED": 0,
		"ST_PRODUCT_TYPE_SALAD":       1,
		"ST_PRODUCT_TYPE_GARNISH":     2,
		"ST_PRODUCT_TYPE_MEAT":        3,
		"ST_PRODUCT_TYPE_SOUP":        4,
		"ST_PRODUCT_TYPE_DRINK":       5,
		"ST_PRODUCT_TYPE_DESSERT":     6,
	}
)

func (x StatisticsProductType) Enum() *StatisticsProductType {
	p := new(StatisticsProductType)
	*p = x
	return p
}

func (x StatisticsProductType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StatisticsProductType) Descriptor() protoreflect.EnumDescriptor {
	return file_statistics_statistics_proto_enumTypes[0].Descriptor()
}

func (StatisticsProductType) Type() protoreflect.EnumType {
	return &file_statistics_statistics_proto_enumTypes[0]
}

func (x StatisticsProductType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StatisticsProductType.Descriptor instead.
func (StatisticsProductType) EnumDescriptor() ([]byte, []int) {
	return file_statistics_statistics_proto_rawDescGZIP(), []int{0}
}

type GetAmountOfProfitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartDate *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate   *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
}

func (x *GetAmountOfProfitRequest) Reset() {
	*x = GetAmountOfProfitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_statistics_statistics_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAmountOfProfitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAmountOfProfitRequest) ProtoMessage() {}

func (x *GetAmountOfProfitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_statistics_statistics_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAmountOfProfitRequest.ProtoReflect.Descriptor instead.
func (*GetAmountOfProfitRequest) Descriptor() ([]byte, []int) {
	return file_statistics_statistics_proto_rawDescGZIP(), []int{0}
}

func (x *GetAmountOfProfitRequest) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *GetAmountOfProfitRequest) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

type GetAmountOfProfitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Profit float64 `protobuf:"fixed64,1,opt,name=profit,proto3" json:"profit,omitempty"`
}

func (x *GetAmountOfProfitResponse) Reset() {
	*x = GetAmountOfProfitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_statistics_statistics_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAmountOfProfitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAmountOfProfitResponse) ProtoMessage() {}

func (x *GetAmountOfProfitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_statistics_statistics_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAmountOfProfitResponse.ProtoReflect.Descriptor instead.
func (*GetAmountOfProfitResponse) Descriptor() ([]byte, []int) {
	return file_statistics_statistics_proto_rawDescGZIP(), []int{1}
}

func (x *GetAmountOfProfitResponse) GetProfit() float64 {
	if x != nil {
		return x.Profit
	}
	return 0
}

type TopProductsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartDate   *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	ProductType *StatisticsProductType `protobuf:"varint,3,opt,name=product_type,json=productType,proto3,enum=mediasoft.internship.final.task.contracts.statistics.StatisticsProductType,oneof" json:"product_type,omitempty"`
}

func (x *TopProductsRequest) Reset() {
	*x = TopProductsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_statistics_statistics_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopProductsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopProductsRequest) ProtoMessage() {}

func (x *TopProductsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_statistics_statistics_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopProductsRequest.ProtoReflect.Descriptor instead.
func (*TopProductsRequest) Descriptor() ([]byte, []int) {
	return file_statistics_statistics_proto_rawDescGZIP(), []int{2}
}

func (x *TopProductsRequest) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *TopProductsRequest) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *TopProductsRequest) GetProductType() StatisticsProductType {
	if x != nil && x.ProductType != nil {
		return *x.ProductType
	}
	return StatisticsProductType_ST_PRODUCT_TYPE_UNSPECIFIED
}

type TopProductsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result []*Product `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *TopProductsResponse) Reset() {
	*x = TopProductsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_statistics_statistics_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopProductsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopProductsResponse) ProtoMessage() {}

func (x *TopProductsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_statistics_statistics_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopProductsResponse.ProtoReflect.Descriptor instead.
func (*TopProductsResponse) Descriptor() ([]byte, []int) {
	return file_statistics_statistics_proto_rawDescGZIP(), []int{3}
}

func (x *TopProductsResponse) GetResult() []*Product {
	if x != nil {
		return x.Result
	}
	return nil
}

type Product struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid        string                `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Name        string                `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Count       int64                 `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	ProductType StatisticsProductType `protobuf:"varint,4,opt,name=product_type,json=productType,proto3,enum=mediasoft.internship.final.task.contracts.statistics.StatisticsProductType" json:"product_type,omitempty"`
}

func (x *Product) Reset() {
	*x = Product{}
	if protoimpl.UnsafeEnabled {
		mi := &file_statistics_statistics_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Product) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Product) ProtoMessage() {}

func (x *Product) ProtoReflect() protoreflect.Message {
	mi := &file_statistics_statistics_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Product.ProtoReflect.Descriptor instead.
func (*Product) Descriptor() ([]byte, []int) {
	return file_statistics_statistics_proto_rawDescGZIP(), []int{4}
}

func (x *Product) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *Product) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Product) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *Product) GetProductType() StatisticsProductType {
	if x != nil {
		return x.ProductType
	}
	return StatisticsProductType_ST_PRODUCT_TYPE_UNSPECIFIED
}

var File_statistics_statistics_proto protoreflect.FileDescriptor

var file_statistics_statistics_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x34, 0x6d,
	0x65, 0x64, 0x69, 0x61, 0x73, 0x6f, 0x66, 0x74, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x73,
	0x68, 0x69, 0x70, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74,
	0x69, 0x63, 0x73, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x96, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x4f, 0x66, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x3e, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x3a, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x03,
	0xe0, 0x41, 0x02, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x22, 0x33, 0x0a, 0x19,
	0x47, 0x65, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x66, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x6f,
	0x66, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x70, 0x72, 0x6f, 0x66, 0x69,
	0x74, 0x22, 0x8c, 0x02, 0x0a, 0x12, 0x54, 0x6f, 0x70, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x73, 0x0a, 0x0c, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x4b, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x73, 0x6f, 0x66, 0x74, 0x2e, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x2e, 0x74, 0x61,
	0x73, 0x6b, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x73, 0x74, 0x61,
	0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69,
	0x63, 0x73, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52,
	0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x42,
	0x0f, 0x0a, 0x0d, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x22, 0x6c, 0x0a, 0x13, 0x54, 0x6f, 0x70, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x73,
	0x6f, 0x66, 0x74, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x66,
	0x69, 0x6e, 0x61, 0x6c, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x73, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xb7,
	0x01, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x6e, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x4b,
	0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x73, 0x6f, 0x66, 0x74, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x2e, 0x74, 0x61, 0x73, 0x6b,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69,
	0x73, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x2a, 0xdc, 0x01, 0x0a, 0x15, 0x53, 0x74, 0x61,
	0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1f, 0x0a, 0x1b, 0x53, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x54,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x53, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43,
	0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x41, 0x4c, 0x41, 0x44, 0x10, 0x01, 0x12, 0x1b,
	0x0a, 0x17, 0x53, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x54, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x47, 0x41, 0x52, 0x4e, 0x49, 0x53, 0x48, 0x10, 0x02, 0x12, 0x18, 0x0a, 0x14, 0x53,
	0x54, 0x5f, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d,
	0x45, 0x41, 0x54, 0x10, 0x03, 0x12, 0x18, 0x0a, 0x14, 0x53, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x44,
	0x55, 0x43, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x4f, 0x55, 0x50, 0x10, 0x04, 0x12,
	0x19, 0x0a, 0x15, 0x53, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x54, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x44, 0x52, 0x49, 0x4e, 0x4b, 0x10, 0x05, 0x12, 0x1b, 0x0a, 0x17, 0x53, 0x54,
	0x5f, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x45,
	0x53, 0x53, 0x45, 0x52, 0x54, 0x10, 0x06, 0x32, 0xb7, 0x03, 0x0a, 0x11, 0x53, 0x74, 0x61, 0x74,
	0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0xda, 0x01,
	0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x66, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x74, 0x12, 0x4e, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x73, 0x6f, 0x66, 0x74, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6c,
	0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e,
	0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x66, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x4f, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x73, 0x6f, 0x66, 0x74, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6c,
	0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e,
	0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x66, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x12, 0x1c, 0x2f, 0x73,
	0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x2d, 0x6f, 0x66, 0x2d, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x12, 0xc4, 0x01, 0x0a, 0x0b, 0x54,
	0x6f, 0x70, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x12, 0x48, 0x2e, 0x6d, 0x65, 0x64,
	0x69, 0x61, 0x73, 0x6f, 0x66, 0x74, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x73, 0x68, 0x69,
	0x70, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x73, 0x2e, 0x54, 0x6f, 0x70, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x49, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x73, 0x6f, 0x66, 0x74,
	0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x66, 0x69, 0x6e, 0x61,
	0x6c, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73,
	0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x54, 0x6f, 0x70, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x12, 0x18, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73,
	0x74, 0x69, 0x63, 0x73, 0x2f, 0x74, 0x6f, 0x70, 0x2d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x73, 0x42, 0x4f, 0x5a, 0x4d, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x6d, 0x65, 0x64, 0x69, 0x61, 0x73, 0x6f, 0x66, 0x74, 0x2d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x73, 0x68, 0x69, 0x70, 0x2f, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x2d, 0x74, 0x61, 0x73, 0x6b, 0x2f,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69,
	0x63, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_statistics_statistics_proto_rawDescOnce sync.Once
	file_statistics_statistics_proto_rawDescData = file_statistics_statistics_proto_rawDesc
)

func file_statistics_statistics_proto_rawDescGZIP() []byte {
	file_statistics_statistics_proto_rawDescOnce.Do(func() {
		file_statistics_statistics_proto_rawDescData = protoimpl.X.CompressGZIP(file_statistics_statistics_proto_rawDescData)
	})
	return file_statistics_statistics_proto_rawDescData
}

var file_statistics_statistics_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_statistics_statistics_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_statistics_statistics_proto_goTypes = []interface{}{
	(StatisticsProductType)(0),        // 0: mediasoft.internship.final.task.contracts.statistics.StatisticsProductType
	(*GetAmountOfProfitRequest)(nil),  // 1: mediasoft.internship.final.task.contracts.statistics.GetAmountOfProfitRequest
	(*GetAmountOfProfitResponse)(nil), // 2: mediasoft.internship.final.task.contracts.statistics.GetAmountOfProfitResponse
	(*TopProductsRequest)(nil),        // 3: mediasoft.internship.final.task.contracts.statistics.TopProductsRequest
	(*TopProductsResponse)(nil),       // 4: mediasoft.internship.final.task.contracts.statistics.TopProductsResponse
	(*Product)(nil),                   // 5: mediasoft.internship.final.task.contracts.statistics.Product
	(*timestamppb.Timestamp)(nil),     // 6: google.protobuf.Timestamp
}
var file_statistics_statistics_proto_depIdxs = []int32{
	6, // 0: mediasoft.internship.final.task.contracts.statistics.GetAmountOfProfitRequest.start_date:type_name -> google.protobuf.Timestamp
	6, // 1: mediasoft.internship.final.task.contracts.statistics.GetAmountOfProfitRequest.end_date:type_name -> google.protobuf.Timestamp
	6, // 2: mediasoft.internship.final.task.contracts.statistics.TopProductsRequest.start_date:type_name -> google.protobuf.Timestamp
	6, // 3: mediasoft.internship.final.task.contracts.statistics.TopProductsRequest.end_date:type_name -> google.protobuf.Timestamp
	0, // 4: mediasoft.internship.final.task.contracts.statistics.TopProductsRequest.product_type:type_name -> mediasoft.internship.final.task.contracts.statistics.StatisticsProductType
	5, // 5: mediasoft.internship.final.task.contracts.statistics.TopProductsResponse.result:type_name -> mediasoft.internship.final.task.contracts.statistics.Product
	0, // 6: mediasoft.internship.final.task.contracts.statistics.Product.product_type:type_name -> mediasoft.internship.final.task.contracts.statistics.StatisticsProductType
	1, // 7: mediasoft.internship.final.task.contracts.statistics.StatisticsService.GetAmountOfProfit:input_type -> mediasoft.internship.final.task.contracts.statistics.GetAmountOfProfitRequest
	3, // 8: mediasoft.internship.final.task.contracts.statistics.StatisticsService.TopProducts:input_type -> mediasoft.internship.final.task.contracts.statistics.TopProductsRequest
	2, // 9: mediasoft.internship.final.task.contracts.statistics.StatisticsService.GetAmountOfProfit:output_type -> mediasoft.internship.final.task.contracts.statistics.GetAmountOfProfitResponse
	4, // 10: mediasoft.internship.final.task.contracts.statistics.StatisticsService.TopProducts:output_type -> mediasoft.internship.final.task.contracts.statistics.TopProductsResponse
	9, // [9:11] is the sub-list for method output_type
	7, // [7:9] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_statistics_statistics_proto_init() }
func file_statistics_statistics_proto_init() {
	if File_statistics_statistics_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_statistics_statistics_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAmountOfProfitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_statistics_statistics_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAmountOfProfitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_statistics_statistics_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopProductsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_statistics_statistics_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopProductsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_statistics_statistics_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Product); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_statistics_statistics_proto_msgTypes[2].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_statistics_statistics_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_statistics_statistics_proto_goTypes,
		DependencyIndexes: file_statistics_statistics_proto_depIdxs,
		EnumInfos:         file_statistics_statistics_proto_enumTypes,
		MessageInfos:      file_statistics_statistics_proto_msgTypes,
	}.Build()
	File_statistics_statistics_proto = out.File
	file_statistics_statistics_proto_rawDesc = nil
	file_statistics_statistics_proto_goTypes = nil
	file_statistics_statistics_proto_depIdxs = nil
}
